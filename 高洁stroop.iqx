// 定义呈现的汉字组

<item words>
	/1 = "红"
	/2 = "黄"
	/3 = "蓝"
	/4 = "绿"
</item>


// 定义好需要呈现的条目之后，我们要考虑，这些item是需要按照文字的方式呈现，那么我们通过"<text></text>"的方式，定义一下以何种形式呈现
// 定义语义与颜色相同的一组

<text redcon>
	/items = ("红")
	/ fontstyle = ("Arial",40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (255,0,0)
</text>

<text yellowcon>
	/items = ("黄")
	/ fontstyle = ("Arial",40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (255,255,0)
</text>

<text bluecon>
	/items = ("蓝")
	/ fontstyle = ("Arial",40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (0,0,255)
</text>

<text greencon>
	/items = ("绿")
	/ fontstyle = ("Arial",40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (0,255,0)
</text>

// 定义语义与颜色不同的组

<text redinc>
	/items = ("黄","绿","蓝")
	/ fontstyle = ("Arial",40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (255,0,0)
</text>

<text yellowinc>
	/items = ("红","蓝","绿")
	/ fontstyle = ("Arial",40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (255,255,0)
</text>

<text blueinc>
	/items = ("红","黄","绿")
	/ fontstyle = ("Arial",40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (0,0,255)
</text>

<text greeninc>
	/items = ("红","黄","蓝")
	/ fontstyle = ("Arial",40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (0,255,0)
</text>

**************************************************************************************************************************************************************************
// 添加注视点

<text fixation>
	/items = ("+")
    /fontstyle = ("Arial", 40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (190,190,190)
</text>

//指导语内容

<text instructiontxt>
	/hjustify = center
	/items = (/1 = "在接下来的实验中,您首先会看到一个注视点“+”,接着您会看不同颜色的汉字,请快速选择出单词的颜色。注意，是汉字的颜色，而非字义。
红色请按 r 键
绿色请按 g 键
蓝色请按 b 键
黄色请按 y 键
请您在实验过程中保持盯着注视点, 并且既快又准地报告出材料的呈现颜色, 如果反应错误时不要理会, 只需注意下一个将要出现的词即可。")
	/size=(1000,300)
	/fontstyle = ("宋体", 24pt)
	/txbgcolor = (0,0,0)
	/txcolor = (255,255,255)
</text>

<text anykeytxt>
	/items = ("按任意键开始实验")
	/vposition = 90 pct
	/fontstyle = ("宋体", 24pt)
	/txcolor = (255,255,255)
	/txbgcolor = (0,0,0)
</text>

 

**************************************************************************************************************************************************************************
// 现在，我们已经定义好了需要呈现的内容，我们接下来要把需要呈现的内容添加到每个trial里，形成一个完整的试次。对于奇数和偶数，被试的正确反映选项是不一样的，因此，我们需要定义trial。
<trial instruction>
	/validresponse = (anyresponse)
	/stimulusframes = [100 = instructiontxt,anykeytxt]
	/recorddata = false
</trial>

<trial redtrial>
	/pretrialpause = 500
	/validresponse = ("r","y","b","g")
	/correctresponse = ("r")
    /stimulusframes = [1 = fixation; 100 = noreplace(redcon, redinc)]
</trial>

<trial yellowtrial>
	/pretrialpause = 500
	/validresponse = ("r","y","b","g")
	/correctresponse = ("y")
    /stimulusframes = [1 = fixation; 100 = noreplace(yellowcon, yellowinc)]
</trial>

<trial bluetrial>
	/pretrialpause = 500
	/validresponse = ("r","y","b","g")
	/correctresponse = ("b")
    /stimulusframes = [1 = fixation; 100 = noreplace(bluecon, blueinc)]
</trial>

<trial greentrial>
	/pretrialpause = 500
	/validresponse = ("r","y","b","g")
	/correctresponse = ("g")
    /stimulusframes = [1 = fixation; 100 = noreplace(greencon, greeninc)]
</trial>

**************************************************************************************************************************************************************************
// 现在每个试次都编辑好了，我们可以把试次组织到区组模块当中，方便实验调用,并返回相应的结果值,最终，我们将block 整合到expt模块中，加在到整个实验当中。

<block instructionblk>
	/screencolor = (0,0,0)
	/trials = [1 = instruction]
</block>

<block stroopblk>
	/screencolor = (0,0,0)
	/blockfeedback = (meanlatency,correct)
	/trials = [1-16 = noreplace(redtrial, yellowtrial,bluetrial,greentrial)]
</block>

<expt>
	/ blocks = [1 = instructionblk; 2 = stroopblk]
</expt>

**************************************************************************************************************************************************************************
// 至此，我们的第一个实验就完成了，在这个实验中，首先可以自上而下的构思:
// 1. 我们要完成一个实验，实验包含一个区组;
// 2. 区组中设定背景颜色，完成区组后呈现的反馈结果，区组中包含的试次数量和类型。这个区组需要呈现中包含16个试次，分为两种类型，分别是奇数试次和偶数试次，通过随机的方式反复调用8次，顺序随机；
// 3. 我们需要定义两种试次，分别是奇数和偶数试次。在每个试次中设定呈现的事件序列，有效的键盘反应，正确的反应键，试次呈现的内容。其中内容是调用编辑好的刺激。
// 4. 在刺激中，我们定义为文字类型的刺激，定义刺激呈现的字体，大小，颜色，背景颜色等信息，最重要的是，呈现的内容来源是调用编辑好的条目，也就是最基本的需要呈现的内容。
// 5. 我们需要提前编辑好我们要呈现的内容，也就是奇数和偶数，我们需要用item进行定义，定义为1个列表。

// 在实验的具体编制过程中，我们一般采用自下而上的思路进行编程，也就是先把需要呈现的内容条目编辑好，然后下一步编辑刺激，之后编辑试次，区组，最终组织到实验当中。

// 通过这样的步骤，我们就完成了我们第一个实验的编制。


